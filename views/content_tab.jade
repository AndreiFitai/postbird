.content-filter
  form
    = "Search"
    select(name="filter-field")
      each column in data.fields
        if column.name != 'ctid'
          option(value = column.name selected = state.filterField == column.name)= column.name
    select(name="filter-matcher")
      option(value="eq") =
      option(value="not_eq") ≠
      option(value="lt") <
      option(value="gt") >
      option(value="lte") ≤
      option(value="gte") ≥
      option(value="null") is null
      option(value="not_null") not null
      option(value="empty") empty
      option(value="like") like
      option(value="regex") regexp
      option(value="starts") starts
      option(value="ends") ends
      option(value="contain") contain
      option(value="custom") custom
    input(type="search" placeholder="Search" name="filter-value" value=state.filterValue)
    button Filter

.rescol-wrapper(full-width=true)
  .rescol-header-wrapper
  .rescol-content-wrapper
    table
      thead
        tr
          each column in data.fields
            if column.name != 'ctid'
              - var type = column_type_label(types[column.name])
              - var typeLabel = shorterTypeName(types[column.name].data_type);
              - var dir = sorting.column == column.name ? sorting.direction : ''
              th(class= 'format-' + type, title=typeLabel, sortable=column.name, sortable-dir=dir)= column.name
      tbody
        each row in data.rows
          tr(data-ctid = row.ctid)
            each column in data.fields
              if column.name != 'ctid'
                td!= formatCell(row[column.name], types[column.name].real_format, types[column.name].data_type)


.summary-and-pages.native-footer-bar
  ul
    //li
    //  a Remove
    //li
    //  a Duplicate
    li.info

    li.pages.prev
      a(exec="prevPage") Prev
    li.pages.next
      a(exec="nextPage") Next
    li.reload
      a(exec="reloadData") Reload
    if tableType == 'BASE TABLE'
      li
        a(exec="addRow") Add New Row
